"""create_gw2_sessions

Revision ID: 13
Revises: 12
Create Date: 2023-11-13 18:22:23.282929

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import JSONB


# revision identifiers, used by Alembic.
revision: str = '13'
down_revision: Union[str, None] = '12'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'gw2_sessions',
        sa.Column('id', sa.BigInteger(), nullable=False),
        sa.Column('user_id', sa.BigInteger(), nullable=False),
        sa.Column('acc_name', sa.String(), nullable=False),
        sa.Column('session', JSONB(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id')
        )
    op.create_unique_constraint('gw2_sessions_id_key', 'gw2_sessions', ['id'])
    op.execute("""
        CREATE TRIGGER before_update_gw2_sessions_tr
            BEFORE UPDATE ON gw2_sessions
            FOR EACH ROW
            EXECUTE PROCEDURE updated_at_column_func();
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TRIGGER IF EXISTS before_update_gw2_sessions_tr ON bot_configs')
    op.drop_constraint('gw2_sessions_id_key', 'gw2_sessions', type_='unique')
    op.drop_table('gw2_sessions')
    # ### end Alembic commands ###
