"""dice_rolls

Revision ID: 0006
Revises: 0005
Create Date: 2024-12-01 15:16:23.073697

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0006'
down_revision: Union[str, None] = '0005'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dice_rolls',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('server_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('roll', sa.Integer(), nullable=False),
    sa.Column('dice_size', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_dice_rolls_server_id'), 'dice_rolls', ['server_id'], unique=False)
    op.create_index(op.f('ix_dice_rolls_user_id'), 'dice_rolls', ['user_id'], unique=False)
    op.execute("""
        CREATE TRIGGER before_update_dice_rolls_tr
            BEFORE UPDATE ON dice_rolls
            FOR EACH ROW
            EXECUTE PROCEDURE updated_at_column_func();
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TRIGGER IF EXISTS before_update_dice_rolls_tr ON dice_rolls')
    op.drop_index(op.f('ix_dice_rolls_user_id'), table_name='dice_rolls')
    op.drop_index(op.f('ix_dice_rolls_server_id'), table_name='dice_rolls')
    op.drop_table('dice_rolls')
    # ### end Alembic commands ###
