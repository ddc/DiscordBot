services:
  bot_db:
    image: postgres:latest
    restart: always
    container_name: bot_db
    user: root
    privileged: true
    env_file: ".env"
    environment:
        TZ: UTC
        POSTGRES_USER: ${POSTGRESQL_USERNAME}
        PGUSER: ${POSTGRESQL_USERNAME}
        POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
        POSTGRES_DB: ${POSTGRESQL_DATABASE}
    volumes:
        - ./postgresql_data:/var/lib/postgresql/data:rw
    ports:
        - ${POSTGRESQL_PORT}:${POSTGRESQL_PORT}
    expose:
        - ${POSTGRESQL_PORT}/tcp
    deploy:
        resources:
            limits:
              cpus: "4"
              memory: 4GB
            reservations:
              cpus: "2"
              memory: 2GB
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRESQL_USERNAME} -d ${POSTGRESQL_DATABASE}'"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 80s


  alembic:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alembic
    restart: on-failure:10
    user: root
    privileged: true
    env_file: .env
    depends_on:
      bot_db:
        condition: service_healthy
    command: ["python", "-m", "alembic", "-c", "./config/alembic.ini", "upgrade", "head"]


  bot:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - LOG_DIRECTORY=${LOG_DIRECTORY}
    container_name: bot
    restart: always
    user: root
    privileged: true
    env_file: .env
    volumes:
        - ${LOG_DIRECTORY}:${LOG_DIRECTORY}
    depends_on:
      - alembic
    command: ["python", "/app/bot.py"]
