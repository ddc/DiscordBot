name: Build and Release

on:
  push:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |  
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install poetry dependencies
        run: |  
          python -m poetry update --with test

#      - name: Run tests
#        run: |
#          python -m poetry run coverage run --omit=./tests/* -m pytest -v
#
#      - name: Generate Coverage Report
#        run: |
#          python -m poetry run coverage report
#          python -m poetry run coverage xml
#
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v5
#        with:
#            token: ${{ secrets.CODECOV_TOKEN }}
#            slug: ddc/DiscordBot

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: patch # major | minor | patch
          tag_prefix: v
          release_name: "Version <RELEASE_VERSION>"
          release_body: ${{ steps.release.outputs.tag_name }}

      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.release.outputs.tag_name }}"
          echo "Got release version ${{ steps.release.outputs.version }}"
          echo "Upload release artifacts to ${{ steps.release.outputs.upload_url }}"
